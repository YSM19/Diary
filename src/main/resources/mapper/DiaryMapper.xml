<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.diary.mapper.DiaryMapper">

    <resultMap id="DiaryResultMap" type="com.backend.diary.entity.DiaryEntity">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="emotion" column="emotion" typeHandler="com.backend.diary.config.EmotionsTypeHandler"/>
        <result property="imageName" column="image_name"/>
        <result property="imagePath" column="image_path"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="date" column="date"/>
        <association property="user" javaType="com.backend.diary.entity.UserEntity">
            <id property="id" column="user_id"/>
            <result property="email" column="user_email"/>
            <result property="username" column="username"/>
        </association>
    </resultMap>

    <select id="findByUserAndDateBetween" resultMap="DiaryResultMap">
        SELECT d.*, u.email as user_email, u.username
        FROM diary d
        JOIN user u ON d.user_id = u.id
        WHERE d.user_id = #{userId}
          AND d.date BETWEEN #{startDate} AND #{endDate}
        ORDER BY d.date DESC
    </select>

    <select id="findByDateAndUserId" resultType="com.backend.diary.entity.DiaryEntity">
        SELECT 
            id, title, content, emotion, image_name, image_path, 
            created_at, updated_at, user_id, date
        FROM diary 
        WHERE date = #{date} AND user_id = #{userId}
    </select>

    <select id="findByUserId" resultType="com.backend.diary.entity.DiaryEntity">
        SELECT 
            id, title, content, emotion, image_name, image_path, 
            created_at, updated_at, user_id, date
        FROM diary 
        WHERE user_id = #{userId}
        ORDER BY date DESC
    </select>

    <select id="findById" resultType="com.backend.diary.entity.DiaryEntity">
        SELECT * FROM diary WHERE id = #{id}
    </select>

    <insert id="save" parameterType="com.backend.diary.entity.DiaryEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO diary (title, content, emotion, image_name, image_path, date, user_id)
        VALUES (
                   #{title},
                   #{content},
                   #{emotion,typeHandler=com.backend.diary.config.EmotionsTypeHandler},
                   #{imageName},
                   #{imagePath},
                   #{date},
                   #{user.id}
               )
    </insert>

    <update id="update" parameterType="com.backend.diary.entity.DiaryEntity">
        UPDATE diary
        SET title = #{title},
            content = #{content},
            emotion = #{emotion},
            image_name = #{imageName},
            image_path = #{imagePath},
            date = #{date}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM diary WHERE id = #{id}
    </delete>
</mapper> 
